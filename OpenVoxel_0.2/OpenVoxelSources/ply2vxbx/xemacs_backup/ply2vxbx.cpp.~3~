#include <QDebug>
#include "../DisplayProgram/3rdparty/rply-1.1.1/rply.h"

int Z=0,X=0,Y=0;
double ZMax=0.0,ZMin=0.0;
double XMax=0.0,XMin=0.0;
double YMax=0.0,YMin=0.0;

//#include <stdio.h> 
//#include "rply.h"

static int vertex_cb_z(p_ply_argument argument) {
  long eol;
  ply_get_argument_user_data(argument, NULL, &eol);
  Z=ply_get_argument_value(argument);
  qDebug();
  if(ZMin>Z)
    ZMin=Z;
  if(ZMax<Z)
    ZMax=Z;
//   if (eol) printf("\n");
//   else printf(" ");

  return 1;
}

static int vertex_cb_x(p_ply_argument argument) {
  long eol;
  ply_get_argument_user_data(argument, NULL, &eol);
  X=ply_get_argument_value(argument);
  if(XMin>X)
    XMin=X;
  if(XMax<X)
    XMax=X;
//   if (eol) printf("\n");
//   else printf(" ");

  return 1;
}

static int vertex_cb_y(p_ply_argument argument) {
  long eol;
  ply_get_argument_user_data(argument, NULL, &eol);
  Y=ply_get_argument_value(argument);
  if(YMin>Y)
    YMin=Y;
  if(YMax<Y)
    YMax=Y;
//   if (eol) printf("\n");
//   else printf(" ");
  // we should have eveyone for this line...
  //  char t[3]={0,0,0};
  //  memset(&mtx[z][x][y],0,3)
  return 1;
}

int main(void) {
  p_ply ply = ply_open("input.ply", NULL, 0, NULL);
  if (!ply) return 1;
  if (!ply_read_header(ply)) return 1;
  
  int nz = ply_set_read_cb(ply, "vertex", "z", vertex_cb_z, NULL, 0);
  int nx = ply_set_read_cb(ply, "vertex", "x", vertex_cb_x, NULL, 0);
  int ny = ply_set_read_cb(ply, "vertex", "y", vertex_cb_y, NULL, 1);
  //  unsigned char mtx  = new char[nz][nx][ny][3];
  if (!ply_read(ply)) return 1;
  ply_close(ply);
  qDebug() << "ZMax: " << ZMax << " ZMin: " << ZMin;
  qDebug() << "XMax: " << ZMax << " XMin: " << ZMin;
  qDebug() << "YMax: " << ZMax << " YMin: " << ZMin;


  return 0;
}

// void main ()

// {
//   qDebug() << " Hello" ;
// }
